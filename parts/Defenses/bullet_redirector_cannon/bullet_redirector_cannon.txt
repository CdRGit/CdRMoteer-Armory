Part : /BASE_PART
{
	NameKey = "CdRMoteer/Armory/Parts/BulletRedirectorCannon"
	IconNameKey = "CdRMoteer/Armory/Parts/BulletRedirectorCannonIcon"
	ID = cdrmoteer.armory.bullet_redirector_cannon
	EditorGroups = ["WeaponsEnergy", "Defenses","CdRMoteerArmory"]
	DescriptionKey = "CdRMoteer/Armory/Parts/BulletRedirectorCannonDesc"
	Cost = 6000
	AIValue = 10
	TypeCategories = [defense, uses_power, is_crewed]
	Size = [2, 2]
	PhysicalRect = [0, 1, 2, 1]
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 9000
	InitialPenetrationResistance = 5
	PenetrationRectType = Normal
	ProhibitAbove = 3
	AllowedDoorLocations
	[
		[-1, 1]
		[2, 1]
		[0, 2]
		[1, 2]
	]
	ExternalWallsByCell
	[
		{
			Key = [0, 1]
			Value = [TopLeft, Bottom, BottomLeft, Left]
		}
		{
			Key = [1, 1]
			Value = [TopRight, Right, BottomRight, Bottom]
		}
	]
	InternalWallsByCell
	[
		{
			Key = [0, 0]
			Value = [Left, TopLeft, Top, TopRight]
		}
		{
			Key = [1, 0]
			Value = [Right, TopRight, Top, TopLeft]
		}
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [42.66, 64]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, PartCrew]
			Mode = All
		}
		
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		TractorModeToggle
		{
			Type = UIToggle
			ToggleID = "tractor_mode"
			Default = 0
		}
		
		BatteryStorage
		{
			Type = AmmoConsumer
			AmmoType = battery
			MaxAmmo = 2000
			Priorities = &/PRIORITIES/Weapon_Supply
			JobUnassignThreshold = 1000000// Effectively unassignable.
			AmmoDesireToggle = PowerToggle
			
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		Graphics
		{
			Type = Graphics
			Location = [1, 1]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 2]
					}
					{
						File = "floor_33.png"
						Size = [2, 2]
					}
					{
						File = "floor_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 2]
					}
					{
						File = "walls_33.png"
						Size = [2, 2]
					}
					{
						File = "walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [2, 2]
					}
					{
						File = "roof_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_on.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_on_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_on_66.png"
						Size = [2, 2]
					}
				]
			}
			NonOperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_off.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_off_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_off_66.png"
						Size = [2, 2]
					}
				]
			}
		}

		Turret
		{
			Type = TurretWeapon
			Location = [1, 1] // Relative to upper-left corner of unrotated part.
			Rotation = -90d // Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = .2
			FiringArc = 90d
			RotateSpeed = 3600d
			FireThresholdAngle = 1d
			AIFirepowerRating = 1000
			Emitter = EmitterProxy
			AllowDirectControl = false
			TargetSearchesPerSecond = 4 // Default is 2.
			HoldTargetAfterCancel = .5

			AutoTargets
			[
				{
					TargetType = Bullets
					BulletTargetCategories = [missile, mine, bullet]
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		TractorBeamPowerBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [255, 0, 0]
			HighColor = [0, 0, 255]
			FullColor = [122, 0, 255]
			Height = 10
		}

		PullComponents
		{
			Type = ToggledComponents
			Toggle = TractorModeToggle
			Invert = true
			Components
			{
				BeamEmitter : <beam/tractor_beam_pull.txt>
				{
					Type = BeamEmitter
					ChainedTo = Turret
					Location = [.5, 0]
					FireTrigger = Turret
					GetTargetFrom = Turret
					OperationalToggle = IsOperational
					AmmoStorage = BatteryStorage
					AmmoUsed = ceil(1000 * (&~/Part/Components/Turret/FireInterval))
					AmmoUsageScaleOverRange = [.1, 1]
					ValueOverRange = [.1, 1]
					MinAmmoUsed = 1
				}
			}
		}

		PushComponents
		{
			Type = ToggledComponents
			Toggle = TractorModeToggle
			Components
			{
				BeamEmitter : <beam/tractor_beam_push.txt>
				{
					Type = BeamEmitter
					ChainedTo = Turret
					Location = [.5, 0]
					FireTrigger = Turret
					GetTargetFrom = Turret
					OperationalToggle = IsOperational
					AmmoStorage = BatteryStorage
					AmmoUsed = ceil(1000 * (&~/Part/Components/Turret/FireInterval))
					AmmoUsageScaleOverRange = [.1, 1]
					ValueOverRange = [-.1, -.5]
					MinAmmoUsed = 1
				}
			}
		}

		EmitterProxy
		{
			Type = EmitterProxy
			ComponentID = BeamEmitter
		}
		EmitterValueProxy
		{
			Type = ValueProxy
			ComponentID = BeamEmitter
		}

		CrewLocation
		{
			Type = CrewLocation
			ChainedTo = Turret
			Location = [-0.125, 0]
			Rotation = 270d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 1
			Priorities = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			CrewDestinations
			[
				[1.375, 1.15]
			]
			CrewLocations
			[
				CrewLocation
			]
		}

		TurretCollider
		{
			Type = CircleCollider
			ChainedTo = Turret
			Radius = 0.72
			Density = 1.5
		}

		TurretGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Location = [0, 0]
			Rotation = 90d
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "turrets"
				DamageLevels
				[
					{
						File = "turret_floor.png"
						Size = [2, 2]
					}
					{
						File = "turret_floor_33.png"
						Size = [2, 2]
					}
					{
						File = "turret_floor_66.png"
						Size = [2, 2]
					}
				]
			}
		}

		WeaponGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Location = [0.25, 0]
			Rotation = 90d
			OperationalToggle = IsOperational
			AnimationSpeedFactor = EmitterValueProxy
			OperationalDoodad
			{
				Layer = "weapons"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"weapon_1.png"
							"weapon_2.png"
							"weapon_3.png"
							"weapon_4.png"
							"weapon_3.png"
							"weapon_2.png"
						]
						Size = [2, 3]
						AnimationInterval = 0.01
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "weapons"
				DamageLevels
				[
					{
						File = "weapon_off.png"
						Size = [2, 3]
					}
				]
			}
		}
		
		BatterySprites
		{
			Type = AmmoSprites
			ChainedTo = Turret
			Location = [.25, 0]
			Rotation = 90d
			AmmoStorage = BatteryStorage
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "battery1.png"
					Size = [2, 3]
				}
				{
					File = "battery2.png"
					Size = [2, 3]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]
		}
		
		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1.5, 1.5]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1.5, 1.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 3]
			Offset = [0, -.5]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000

		MinPower = min((&../StatsByCategory/0/Stats/PowerUsageContinuous) / 8 "," (&../StatsByCategory/1/Stats/PowerUsageContinuous) / 4)
		RecPower = max((&../StatsByCategory/0/Stats/PowerUsageContinuous) / 2 "," (&../StatsByCategory/1/Stats/PowerUsageContinuous))
		MinCrew = (&CrewRequired) + (&MinPower) * 2
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}

	StatsByCategory
	[
		{
			NameKey = "CdRMoteer/Armory/StatCategories/BulletRedirectorCannonPull"
			Stats
			{
				ImpulsePerShot = &~/Part/Components/PullComponents/Components/BeamEmitter/TractorImpulse
				HitInterval = &~/Part/Components/PullComponents/Components/BeamEmitter/HitInterval
				WeakForce = (&ImpulsePerShot) / (&HitInterval) * 1000
				Range = &~/Part/Components/PullComponents/Components/BeamEmitter/Range
				Stretch = &~/Part/Components/PullComponents/Components/BeamEmitter/StretchRange
				Arc = deg(&~/Part/Components/Turret/FiringArc)
				TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
				PowerPerShot = (&~/Part/Components/PullComponents/Components/BeamEmitter/AmmoUsed) / 1000
				PowerUsageContinuous = (&PowerPerShot) / (&~/Part/Components/Turret/FireInterval)
			}
		}
		{
			NameKey = "CdRMoteer/Armory/StatCategories/BulletRedirectorCannonPush"
			Stats
			{
				ImpulsePerShot = &~/Part/Components/PushComponents/Components/BeamEmitter/TractorImpulse
				HitInterval = &~/Part/Components/PushComponents/Components/BeamEmitter/HitInterval
				WeakForce = (&ImpulsePerShot) / (&HitInterval) * 1000
				Range = &~/Part/Components/PushComponents/Components/BeamEmitter/Range
				Arc = deg(&~/Part/Components/Turret/FiringArc)
				TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
				PowerPerShot = (&~/Part/Components/PushComponents/Components/BeamEmitter/AmmoUsed) / 1000
				PowerUsageContinuous = (&PowerPerShot) / (&~/Part/Components/Turret/FireInterval)
			}
		}
	]

	StatsNotesKey = "CdRMoteer/Armory/Stats/BulletRedirectorCannonNotes"
}
